package main

import "fmt"

type MSDP struct {
	vals map[string]interface{}
}

func parseData(data []byte) MSDP {
	m := MSDP{vals: make(map[string]interface{})}

	for len(data) > 0 {

	}

	return m
}

func main() {

	//data := []byte{3, 1, 110, 97, 109, 101, 2, 75, 101, 110, 115, 104, 111, 1, 104, 101, 97, 108, 116, 104, 2, 49, 54, 51, 1, 109, 97, 110, 97, 2, 49, 48, 48, 1, 115, 116, 97, 109, 105, 110, 97, 2, 49, 48, 48, 1, 99, 108, 97, 115, 115, 2, 71, 79, 68, 1, 114, 97, 99, 101, 2, 111, 116, 104, 101, 114, 1, 110, 112, 99, 2, 112, 99, 1, 112, 111, 115, 105, 116, 105, 111, 110, 2, 70, 108, 121, 105, 110, 103, 1, 119, 105, 116, 104, 95, 108, 101, 97, 100, 101, 114, 2, 49, 1, 102, 108, 97, 103, 115, 2, 27, 91, 48, 59, 51, 50, 109, 87, 50, 49, 57, 1, 119, 105, 116, 104, 95, 121, 111, 117, 2, 49, 1, 105, 115, 95, 108, 101, 97, 100, 101, 114, 2, 49, 1, 105, 115, 95, 115, 117, 98, 108, 101, 97, 100, 101, 114, 2, 48, 1, 108, 101, 118, 101, 108, 2, 50, 49, 57, 4, 6, 255}
	data := []byte{1, 71, 82, 79, 85, 80, 2, 5, 2, 3, 1, 110, 97, 109, 101, 2, 75, 101, 110, 115, 104, 111, 1, 104, 101, 97, 108, 116, 104, 2, 49, 54, 51, 1, 109, 97, 110, 97, 2, 49, 48, 48, 1, 115, 116, 97, 109, 105, 110, 97, 2, 49, 48, 48, 1, 99, 108, 97, 115, 115, 2, 71, 79, 68, 1, 114, 97, 99, 101, 2, 111, 116, 104, 101, 114, 1, 110, 112, 99, 2, 112, 99, 1, 112, 111, 115, 105, 116, 105, 111, 110, 2, 70, 108, 121, 105, 110, 103, 1, 119, 105, 116, 104, 95, 108, 101, 97, 100, 101, 114, 2, 49, 1, 102, 108, 97, 103, 115, 2, 27, 91, 48, 59, 51, 50, 109, 87, 50, 49, 57, 1, 119, 105, 116, 104, 95, 121, 111, 117, 2, 49, 1, 105, 115, 95, 108, 101, 97, 100, 101, 114, 2, 49, 1, 105, 115, 95, 115, 117, 98, 108, 101, 97, 100, 101, 114, 2, 48, 1, 108, 101, 118, 101, 108, 2, 50, 49, 57, 4, 6, 255}
	x := parseData(data)

	fmt.Printf("%+v", x)
}
